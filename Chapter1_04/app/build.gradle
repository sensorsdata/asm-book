plugins {
    id 'com.android.application'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "cn.sensorsdata.asmbook.chapter1_04"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

class ServerNode {
    String address
    int cpuCount

    ServerNode(String address, int cpuCount) {
        this.address = address
        this.cpuCount = cpuCount
    }

    @Override
    public String toString() {
        return "ServerNode{" +
                "address='" + address + '\'' +
                ", cpuCount=" + cpuCount +
                '}';
    }
}

class MyExtensionTestPlugin implements Plugin<Project> {

    @Override
    void apply(Project target) {
        println("My Extension Test Plugin ")

        //demo1:创建 extension
        ServerNode serverNode = target.getExtensions().create("serverNode", ServerNode, "SensorsData Beijing", 36)
        println("1.configure phase 's result: $serverNode")
        target.task("getResult") {
            doLast {
                println("result is: $serverNode")
            }
        }

        //demo2:添加 extension
        ServerNode addServerNode = new ServerNode("SensorsData HeFei by Add", 4)
        target.getExtensions().add("addServerNode", addServerNode)
        target.task("getAddResult"){
            doLast {
                ServerNode tmpServerNode = target.getExtensions().findByName("addServerNode")
                println("add result is: $tmpServerNode")
            }
        }

    }
}

apply plugin: MyExtensionTestPlugin

serverNode {
    address = "SensorsData HeFei"
    cpuCount = 16
}

addServerNode{
    cpuCount = 8
}
